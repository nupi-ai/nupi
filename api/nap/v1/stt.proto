syntax = "proto3";

package nupi.nap.v1;

option go_package = "github.com/nupi-ai/nupi/api/nap/v1;napv1";

import "google/protobuf/timestamp.proto";

// AudioFormat describes PCM parameters used when streaming audio to adapters.
message AudioFormat {
  string encoding = 1;      // e.g. pcm_s16le
  uint32 sample_rate = 2;   // Hz
  uint32 channels = 3;      // mono=1, stereo=2
  uint32 bit_depth = 4;     // bits per sample
  uint32 frame_duration_ms = 5;
}

// Segment represents a chunk of PCM audio delivered to the adapter.
message Segment {
  uint64 sequence = 1;
  bytes audio = 2;
  bool first = 3;
  bool last = 4;
  google.protobuf.Timestamp started_at = 5;
  google.protobuf.Timestamp ended_at = 6;
  map<string, string> metadata = 7;
  uint32 duration_ms = 8;
}

// StreamTranscriptionRequest emits audio data and lifecycle signals.
message StreamTranscriptionRequest {
  string session_id = 1;
  string stream_id = 2;
  AudioFormat format = 3;
  map<string, string> metadata = 4;
  string config_json = 5;
  Segment segment = 6;
  bool flush = 7;
}

// Transcript represents STT output for a processed segment.
message Transcript {
  uint64 sequence = 1;
  string text = 2;
  float confidence = 3;
  bool final = 4;
  google.protobuf.Timestamp started_at = 5;
  google.protobuf.Timestamp ended_at = 6;
  map<string, string> metadata = 7;
}

// SpeechToTextService exposes the NAP contract for STT adapters.
service SpeechToTextService {
  rpc StreamTranscription(stream StreamTranscriptionRequest) returns (stream Transcript);
}

